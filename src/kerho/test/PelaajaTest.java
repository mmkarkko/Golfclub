package kerho.test;
// Generated by ComTest BEGIN
import static org.junit.Assert.*;
import org.junit.*;
import kerho.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2023.03.20 12:15:42 // Generated by ComTest
 *
 */
@SuppressWarnings("all")
public class PelaajaTest {


  // Generated by ComTest BEGIN
  /** testRekisteroi95 */
  @Test
  public void testRekisteroi95() {    // Pelaaja: 95
    Pelaaja p1 = new Pelaaja(); 
    assertEquals("From: Pelaaja line: 97", 0, p1.getpelaajaNro()); 
    p1.rekisteroi(); 
    Pelaaja p2 = new Pelaaja(); 
    p2.rekisteroi(); 
    int n1 = p1.getpelaajaNro(); 
    int n2 = p2.getpelaajaNro(); 
    assertEquals("From: Pelaaja line: 103", n1+1, n2);  //
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testRekisteroiOsake117 */
  @Test
  public void testRekisteroiOsake117() {    // Pelaaja: 117
    Pelaaja p1 = new Pelaaja(); 
    assertEquals("From: Pelaaja line: 119", 0, p1.getOsakeNro()); 
    p1.rekisteroiOsake(); 
    Pelaaja p2 = new Pelaaja(); 
    p2.rekisteroiOsake(); 
    int n1 = 1; 
    int n2 = 2; 
    assertEquals("From: Pelaaja line: 125", n1+1, n2); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testToString143 */
  @Test
  public void testToString143() {    // Pelaaja: 143
    Pelaaja pelaaja = new Pelaaja(); 
    pelaaja.parse("   3  |  Ankka Aku   | 030201-111C"); 
    assertEquals("From: Pelaaja line: 146", true, pelaaja.toString().startsWith("3|Ankka Aku|030201-111C|"));  // on enemmäkin kuin 3 kenttää, siksi loppu |
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testParse212 */
  @Test
  public void testParse212() {    // Pelaaja: 212
    Pelaaja pelaaja = new Pelaaja(); 
    pelaaja.parse("   1  |  Pelaaja Petteri   | 030201-111C"); 
    assertEquals("From: Pelaaja line: 215", 1, pelaaja.getpelaajaNro()); 
    assertEquals("From: Pelaaja line: 216", true, pelaaja.toString().startsWith("1|Pelaaja Petteri|030201-111C|"));  // on enemmäkin kuin 3 kenttää, siksi loppu |
    pelaaja.rekisteroi(); 
    int n = pelaaja.getpelaajaNro(); 
    pelaaja.parse(""+(n+20));  // Otetaan merkkijonosta vain tunnusnumero
    pelaaja.rekisteroi();  // ja tarkistetaan että seuraavalla kertaa tulee yhtä isompi
    assertEquals("From: Pelaaja line: 222", n+20+1, pelaaja.getpelaajaNro()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testClone330 
   * @throws CloneNotSupportedException when error
   */
  @Test
  public void testClone330() throws CloneNotSupportedException {    // Pelaaja: 330
    Pelaaja pelaaja = new Pelaaja(); 
    pelaaja.parse("   3  |  Ankka Aku   | 123"); 
    Pelaaja kopio = pelaaja.clone(); 
    assertEquals("From: Pelaaja line: 335", pelaaja.toString(), kopio.toString()); 
    pelaaja.parse("   4  |  Ankka Tupu   | 123"); 
    assertEquals("From: Pelaaja line: 337", false, kopio.toString().equals(pelaaja.toString())); 
  } // Generated by ComTest END
}