package kerho.test;
// Generated by ComTest BEGIN
import static org.junit.Assert.*;
import org.junit.*;
import kerho.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2023.04.16 15:27:11 // Generated by ComTest
 *
 */
@SuppressWarnings("all")
public class PelaajaTest {



  // Generated by ComTest BEGIN
  /** testGetNimi124 */
  @Test
  public void testGetNimi124() {    // Pelaaja: 124
    Pelaaja p = new Pelaaja(); 
    p.vastaaAkuAnkka(); 
    { String _l_=p.getNimi(),_r_="Pelaaja Petteri"; if ( !_l_.matches(_r_) ) fail("From: Pelaaja line: 127" + " does not match: ["+ _l_ + "] != [" + _r_ + "]");}; 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testAseta192 */
  @Test
  public void testAseta192() {    // Pelaaja: 192
    Pelaaja pelaaja = new Pelaaja(); 
    assertEquals("From: Pelaaja line: 194", null, pelaaja.aseta(1,"Ankka Aku")); 
    { String _l_=pelaaja.aseta(2,"kissa"),_r_="Hetu liian lyhyt"; if ( !_l_.matches(_r_) ) fail("From: Pelaaja line: 195" + " does not match: ["+ _l_ + "] != [" + _r_ + "]");}
    assertEquals("From: Pelaaja line: 196", "Tarkistusmerkin kuuluisi olla C", pelaaja.aseta(2,"030201-1111")); 
    assertEquals("From: Pelaaja line: 197", null, pelaaja.aseta(2,"030201-111C")); 
    assertEquals("From: Pelaaja line: 198", null, pelaaja.aseta(9,"ok")); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testRekisteroi310 */
  @Test
  public void testRekisteroi310() {    // Pelaaja: 310
    Pelaaja p1 = new Pelaaja(); 
    assertEquals("From: Pelaaja line: 312", 0, p1.getpelaajaNro()); 
    p1.rekisteroi(); 
    Pelaaja p2 = new Pelaaja(); 
    p2.rekisteroi(); 
    int n1 = p1.getpelaajaNro(); 
    int n2 = p2.getpelaajaNro(); 
    assertEquals("From: Pelaaja line: 318", n1+1, n2);  //
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testRekisteroiOsake352 */
  @Test
  public void testRekisteroiOsake352() {    // Pelaaja: 352
    Pelaaja p1 = new Pelaaja(); 
    assertEquals("From: Pelaaja line: 354", 0, p1.getOsakeNro()); 
    p1.rekisteroiOsake(); 
    Pelaaja p2 = new Pelaaja(); 
    p2.rekisteroiOsake(); 
    int n1 = 1; 
    int n2 = 2; 
    assertEquals("From: Pelaaja line: 360", n1+1, n2); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testToString402 */
  @Test
  public void testToString402() {    // Pelaaja: 402
    Pelaaja pelaaja = new Pelaaja(); 
    pelaaja.parse(" 3  | Teetime Tiina  | 010428-802Y |  11.0 |  010-0101010  | tiinateetime@golffari.fi | Tiikuja 1 |  11001 Tiiala  | 1  | OK   | 1  "); 
    assertEquals("From: Pelaaja line: 405", true, pelaaja.toString().startsWith("3|Teetime Tiina|010428-802Y|"));  // on enemmäkin kuin 3 kenttää, siksi loppu |
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testParse427 */
  @Test
  public void testParse427() {    // Pelaaja: 427
    Pelaaja pelaaja = new Pelaaja(); 
    pelaaja.parse(" 3  | Teetime Tiina  | 010428-802Y |  11.0 |  010-0101010  | tiinateetime@golffari.fi | Tiikuja 1 |  11001 Tiiala  | 1  | OK   | 1  "); 
    assertEquals("From: Pelaaja line: 430", 3, pelaaja.getpelaajaNro()); 
    assertEquals("From: Pelaaja line: 431", true, pelaaja.toString().startsWith("3|Teetime Tiina|010428-802Y|"));  // on enemmäkin kuin 3 kenttää, siksi loppu |
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testEquals447 */
  @Test
  public void testEquals447() {    // Pelaaja: 447
    Pelaaja p1 = new Pelaaja(); 
    p1.parse("   1  | Pelaaja Petteri | 070819-5398 |5.4  | 000-9999999  | petepelaaja@golffari.fi  | Pelimiehenkuja 1 | 11111 Pelilä     | 1  | OK  |1  "); 
    Pelaaja p2 = new Pelaaja(); 
    p2.parse("   1  | Pelaaja Petteri | 070819-5398 |5.4  | 000-9999999  | petepelaaja@golffari.fi  | Pelimiehenkuja 1 | 11111 Pelilä     | 1  | OK  |1  "); 
    Pelaaja p3 = new Pelaaja(); 
    p3.parse("3   | Teetime Tiina  |010428-802Y | 11.0 | 010-0101010  | tiinateetime@golffari.fi | Tiikuja    |11001 Tiiala     |  1  |OK   |1     "); 
    assertEquals("From: Pelaaja line: 455", true, p1.equals(p2)); 
    assertEquals("From: Pelaaja line: 456", true, p2.equals(p1)); 
    assertEquals("From: Pelaaja line: 457", false, p1.equals(p3)); 
    assertEquals("From: Pelaaja line: 458", false, p3.equals(p2)); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testClone485 
   * @throws CloneNotSupportedException when error
   */
  @Test
  public void testClone485() throws CloneNotSupportedException {    // Pelaaja: 485
    Pelaaja pelaaja = new Pelaaja(); 
    pelaaja.parse(" 3  | Teetime Tiina  | 010428-802Y |  11.0 |  010-0101010  | tiinateetime@golffari.fi | Tiikuja 1 |  11001 Tiiala  | 1  | OK   | 1  "); 
    Pelaaja kopio = pelaaja.clone(); 
    assertEquals("From: Pelaaja line: 490", pelaaja.toString(), kopio.toString()); 
    pelaaja.parse(" 8   | Ping Pinja    |040689-126E | 4.3  | 425-4250425  |  pingpin@golffari.fi   | Pinjatie 3   | 04255 Pinjala    | 5    | OK  |1     "); 
    assertEquals("From: Pelaaja line: 492", false, kopio.toString().equals(pelaaja.toString())); 
  } // Generated by ComTest END
}