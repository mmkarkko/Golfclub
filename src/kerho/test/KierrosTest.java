package kerho.test;
// Generated by ComTest BEGIN
import static org.junit.Assert.*;
import org.junit.*;
import kerho.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2023.04.16 14:13:15 // Generated by ComTest
 *
 */
@SuppressWarnings("all")
public class KierrosTest {



  // Generated by ComTest BEGIN
  /** testAnna117 */
  @Test
  public void testAnna117() {    // Kierros: 117
    Kierros k = new Kierros(); 
    k.parse("   1   |   2   |  13.4.2023  |   12.20  | ei | 18   |  15.0  |  Paras Golfkerho "); 
    assertEquals("From: Kierros line: 120", "1", k.anna(0)); 
    assertEquals("From: Kierros line: 121", "2", k.anna(1)); 
    assertEquals("From: Kierros line: 122", "13.4.2023", k.anna(2)); 
    assertEquals("From: Kierros line: 123", "12.20", k.anna(3)); 
    assertEquals("From: Kierros line: 124", "ei", k.anna(4)); 
    assertEquals("From: Kierros line: 125", "18", k.anna(5)); 
    assertEquals("From: Kierros line: 126", "15.0", k.anna(6)); 
    assertEquals("From: Kierros line: 127", "Paras Golfkerho", k.anna(7)); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testAseta154 */
  @Test
  public void testAseta154() {    // Kierros: 154
    Kierros k = new Kierros(); 
    assertEquals("From: Kierros line: 156", "aloitusvuosi: Ei kokonaisluku (kissa)", k.aseta(3,"kissa")); 
    assertEquals("From: Kierros line: 157", null, k.aseta(3,"1940")); 
    assertEquals("From: Kierros line: 158", "h/vko: Ei kokonaisluku (kissa)", k.aseta(4,"kissa")); 
    assertEquals("From: Kierros line: 159", null, k.aseta(4,"20")); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testClone201 
   * @throws CloneNotSupportedException when error
   */
  @Test
  public void testClone201() throws CloneNotSupportedException {    // Kierros: 201
    Kierros k = new Kierros(); 
    k.parse("  1   |  10  |   10.4.2023  | 10.00 | ei  |  kyllä  |  18  |   15.0   |  Paras Golfkerho "); 
    Kierros kopio = k.clone(); 
    assertEquals("From: Kierros line: 206", k.toString(), kopio.toString()); 
    k.parse("   1   |  11  |   14.4.2023  | 10.20 | ei   | kyllä   |  18  |  10.0  |  Paras Golfkerho "); 
    assertEquals("From: Kierros line: 208", false, kopio.toString().equals(k.toString())); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testRekisteroi278 */
  @Test
  public void testRekisteroi278() {    // Kierros: 278
    Kierros k1 = new Kierros(); 
    assertEquals("From: Kierros line: 280", 0, k1.getKierrosNro()); 
    k1.rekisteroi(); 
    Kierros k2 = new Kierros(); 
    k2.rekisteroi(); 
    int n1 = k1.getKierrosNro(); 
    int n2 = k2.getKierrosNro(); 
    assertEquals("From: Kierros line: 286", n1+1, n2); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testParse331 */
  @Test
  public void testParse331() {    // Kierros: 331
    Kierros kierros = new Kierros(); 
    kierros.parse("  1   |  3  |   11.7.2023  |  18.50  |   ei  |  9   |  11.0  |   Paras Golfkerho"); 
    assertEquals("From: Kierros line: 334", 3, kierros.getPelaajaNro()); 
    assertEquals("From: Kierros line: 335", "1|3|11.7.2023|18.50|ei|9|11.0|Paras Golfkerho", kierros.toString()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testToString349 */
  @Test
  public void testToString349() {    // Kierros: 349
    Kierros kierros = new Kierros(); 
    kierros.parse("  1   |  3  |   11.7.2023  |  18.50  |   ei  |  9   |  11.0  |   Paras Golfkerho"); 
    assertEquals("From: Kierros line: 352", "1|3|11.7.2023|18.50|ei|9|11.0|Paras Golfkerho", kierros.toString()); 
  } // Generated by ComTest END
}